{% extends "base.html" %}
{% block content %}

<!-- Tabs for switching -->
<ul class="nav nav-tabs mb-4" id="courtTabs" role="tablist">
  <li class="nav-item" role="presentation">
    <button class="nav-link active" id="case-tab" data-bs-toggle="tab" data-bs-target="#caseTab" type="button" role="tab">Case Details</button>
  </li>
  <li class="nav-item" role="presentation">
    <button class="nav-link" id="cause-tab" data-bs-toggle="tab" data-bs-target="#causeTab" type="button" role="tab">Cause List</button>
  </li>
</ul>

<div class="tab-content">
  <!-- High Court Case Fetcher Tab -->
  <div class="tab-pane fade show active" id="caseTab" role="tabpanel">
    <div class="card shadow p-4">
      <h4 class="mb-3">High Court Scraper</h4>
      <!-- High Court Scraper Form -->
      <form id="highCourtForm" method="POST">
        {% csrf_token %}

        <!-- High Court -->
        <div class="mb-3">
          <label class="form-label">Select High Court</label>
          <select id="highCourt" name="highCourt" class="form-select" disabled required>
            <option value="">-- Select High Court --</option>
          </select>
        </div>

        <!-- Bench -->
        <div class="mb-3">
          <label class="form-label">Select Bench</label>
          <select id="bench" name="bench" class="form-select" disabled required>
            <option value="">-- Select Bench --</option>
          </select>
        </div>

        <!-- Case Type -->
        <div class="mb-3">
          <label class="form-label">Select Case Type</label>
          <select id="caseType" name="caseType" class="form-select" disabled required>
            <option value="">-- Select Case Type --</option>
          </select>
        </div>

        <!-- Case Number -->
        <div class="mb-3">
          <label class="form-label">Case Number</label>
          <input type="number" id="caseNumber" name="caseNumber" class="form-control" required>
        </div>

        <!-- Year -->
        <div class="mb-3">
          <label class="form-label">Year</label>
          <input type="number" id="year" name="year" class="form-control" required>
        </div>

        <!-- Captcha -->
        <div class="mb-3">
          <label class="form-label">Captcha</label>
          <div class="d-flex align-items-center">
            <img id="captchaImage" src="" alt="Captcha" class="me-3 border rounded" style="height:50px;">
            <button type="button" class="btn btn-outline-secondary btn-sm" id="refreshCaptcha">Refresh</button>
          </div>
          <input type="text" id="captchaText" name="captchaText" class="form-control mt-2" placeholder="Enter captcha" required>
        </div>

        <!-- Submit -->
        <div class="d-grid">
          <button type="submit" class="btn btn-primary">Fetch</button>
        </div>
      </form>
    </div>
  </div>

  <!-- Cause List Tab -->
  <div class="tab-pane fade" id="causeTab" role="tabpanel">
    <div class="card shadow p-4">
      <h4 class="mb-3">Cause List Downloader</h4>
      <form id="causeListForm" method="POST">
        {% csrf_token %}
        <!-- High Court Selection -->
        <div class="mb-3">
          <label class="form-label">Select High Court</label>
          <select id="causeHighCourt" name="highCourt" class="form-select" required>
            <option value="">-- Select High Court --</option>
          </select>
        </div>
        <!-- Bench Selection -->
        <div class="mb-3">
          <label class="form-label">Select Bench</label>
          <select id="causeBench" name="bench" class="form-select" required>
            <option value="">-- Select Bench --</option>
          </select>
        </div>
        <!-- Date -->
        <div class="mb-3">
          <label class="form-label">Select Date</label>
          <input type="date" id="causeDate" name="date" class="form-control" required>
        </div>
        <div class="d-grid">
          <button type="submit" class="btn btn-primary">Download Cause List</button>
        </div>
      </form>
    </div>
  </div>
</div>

<!-- Results Container -->
<div id="results" class="mt-4" style="display:none;"></div>

<!-- Loading Spinner -->
<div id="loadingSpinner" class="text-center my-4" style="display:none;">
  <div class="spinner-border text-primary" role="status" style="width: 3rem; height: 3rem;">
    <span class="visually-hidden">Loading...</span>
  </div>
  <p class="mt-2 text-primary fw-bold">Fetching data...</p>
</div>

<script>
$(document).ready(function() {

  let caseFormLoaded = false;
  let causeFormLoaded = false;

  // Tab switch event
  $('button[data-bs-toggle="tab"]').on('shown.bs.tab', function(e) {
    const target = $(e.target).data('bs-target');

    if (target === '#caseTab' && !caseFormLoaded) {
      caseFormLoaded = true;
      $("#highCourt").prop("disabled", true).html('<option>Loading...</option>');
      // Load High Courts for Case Details form
      $.getJSON("/api/highcourts/", function(data) {
        let $select = $("#highCourt");
        $select.prop("disabled", false).html('<option value="">-- Select High Court --</option>');
        data.forEach(item => $select.append(`<option value="${item.id}">${item.name}</option>`));
      });

      // Load Benches dynamically
      $("#highCourt").change(function() {
        let courtId = $(this).val();
        $("#bench").prop("disabled", true).html('<option>Loading...</option>');
        $.getJSON(`/api/benches/${courtId}/`, function(data) {
          $("#bench").prop("disabled", false).html('<option value="">-- Select Bench --</option>');
          data.forEach(item => $("#bench").append(`<option value="${item.id}">${item.name}</option>`));
        });
      });

      // Load Case Types dynamically
      $("#bench").change(function() {
        let benchId = $(this).val();
        $("#caseType").prop("disabled", true).html('<option>Loading...</option>');
        $.getJSON(`/api/casetypes/${benchId}/`, function(data) {
          $("#caseType").prop("disabled", false).html('<option value="">-- Select Case Type --</option>');
          data.forEach(item => $("#caseType").append(`<option value="${item.id}">${item.name}</option>`));
        });
        loadCaptcha();
      });

      function loadCaptcha() {
        $.getJSON("/api/captcha/", function(data) {
          $("#captchaImage").attr("src", "data:image/png;base64," + data.image_base64);
        });
      }

      $("#refreshCaptcha").click(loadCaptcha);

    } else if (target === '#causeTab' && !causeFormLoaded) {
      causeFormLoaded = true;

      // Load High Courts for Cause List form
      $.getJSON("/api/highcourts/", function(data) {
        let $select = $("#causeHighCourt");
        $select.prop("disabled", false).html('<option value="">-- Select High Court --</option>');
        data.forEach(item => $select.append(`<option value="${item.id}">${item.name}</option>`));
      });

      // Load Benches dynamically
      $("#causeHighCourt").change(function() {
        let courtId = $(this).val();
        $("#causeBench").prop("disabled", true).html('<option>Loading...</option>');
        $.getJSON(`/api/benches/${courtId}/`, function(data) {
          $("#causeBench").prop("disabled", false).html('<option value="">-- Select Bench --</option>');
          data.forEach(item => $("#causeBench").append(`<option value="${item.id}">${item.name}</option>`));
        });
      });

    }
  });

  // Form submissions (AJAX) remain the same
  $("#highCourtForm").submit(function(e) {
    e.preventDefault();

    // Show spinner
    $("#loadingSpinner").show();
    $("#results").hide().empty();

    let formData = {
      highCourt: $("#highCourt").val(),
      bench: $("#bench").val(),
      caseType: $("#caseType").val(),
      caseTypeText: $("#caseType option:selected").text(),
      caseNumber: $("#caseNumber").val(),
      year: $("#year").val(),
      captchaText: $("#captchaText").val(),
      captchaToken: $("#captchaImage").data("token"),
      csrfmiddlewaretoken: $("input[name=csrfmiddlewaretoken]").val()
    };

    $.ajax({
      url: "/api/fetch-case/",
      method: "POST",
      contentType: "application/json",
      data: JSON.stringify(formData),
      success: function(response) {

        // Hide spinner
        $("#loadingSpinner").hide();

        // Hide form card
        $(".card.shadow.p-4").hide();

        // Clear results
        let container = $("#results");
        container.show().empty();

        // Helper function to create a table from JSON object
        function createTable(title, obj) {
            let html = `<div class="card shadow mb-3">
                        <div class="card-header bg-primary text-white">${title}</div>
                        <div class="card-body">
                            <table class="table table-striped table-bordered mb-0">`;
            for (let key in obj) {
            html += `<tr><th>${key}</th><td>${obj[key] || '-'}</td></tr>`;
            }
            html += `</table></div></div>`;
            return html;
        }

        
        caseInfoTtile = `
            <div class="mt-5">
                <h3 class="text-center fw-bold text-primary">ðŸ“œ Case Information</h3>
                <hr class="my-3">
            </div>
        `;
        container.append(caseInfoTtile);

        // Case Details
        container.append(createTable("Case Details", response.case_details));

        // Case Status
        container.append(createTable("Case Status", response.case_status));

        // Petitioner & Respondent
        container.append(`<div class="card shadow mb-3">
                            <div class="card-header bg-info text-white">Petitioner</div>
                            <div class="card-body">${response.petitioner}</div>
                            </div>`);

        container.append(`<div class="card shadow mb-3">
                            <div class="card-header bg-info text-white">Respondent</div>
                            <div class="card-body">${response.respondent}</div>
                            </div>`);

        // Category Details
        container.append(createTable("Category Details", response.category_details));

        // IA Details
        if (response.ia_details && response.ia_details.length) {
            let iaHtml = `<div class="card shadow mb-3">
                            <div class="card-header bg-warning text-dark">IA Details</div>
                            <div class="card-body">
                            <table class="table table-striped table-bordered mb-0">
                                <thead><tr>`;
            for (let key in response.ia_details[0]) {
            iaHtml += `<th>${key}</th>`;
            }
            iaHtml += `</tr></thead><tbody>`;
            response.ia_details.forEach(row => {
            iaHtml += `<tr>`;
            for (let key in row) iaHtml += `<td>${row[key] || '-'}</td>`;
            iaHtml += `</tr>`;
            });
            iaHtml += `</tbody></table></div></div>`;
            container.append(iaHtml);
        }

        // Case History
        if (response.case_history && response.case_history.length) {
            let historyHtml = `<div class="card shadow mb-3">
                                <div class="card-header bg-success text-white">Case History</div>
                                <div class="card-body">
                                <table class="table table-striped table-bordered mb-0">
                                    <thead><tr>`;
            for (let key in response.case_history[0]) historyHtml += `<th>${key}</th>`;
            historyHtml += `</tr></thead><tbody>`;
            response.case_history.forEach(row => {
            historyHtml += `<tr>`;
            for (let key in row) historyHtml += `<td>${row[key] || '-'}</td>`;
            historyHtml += `</tr>`;
            });
            historyHtml += `</tbody></table></div></div>`;
            container.append(historyHtml);
        }

        // Orders
        if (response.orders && response.orders.length) {
            let ordersHtml = `<div class="card shadow mb-3">
                                <div class="card-header bg-secondary text-white">Orders</div>
                                <div class="card-body">
                                <table class="table table-striped table-bordered mb-0">
                                    <thead><tr>`;
            for (let key in response.orders[0]) ordersHtml += `<th>${key}</th>`;
            ordersHtml += `</tr></thead><tbody>`;
            response.orders.forEach(row => {
            ordersHtml += `<tr>`;
            for (let key in row) {
                if (key === "PDF URL") {
                ordersHtml += `<td><a href="${row[key]}" target="_blank" class="btn btn-sm btn-success">View PDF</a></td>`;
                } else {
                ordersHtml += `<td>${row[key] || '-'}</td>`;
                }
            }
            ordersHtml += `</tr>`;
            });
            ordersHtml += `</tbody></table></div></div>`;
            container.append(ordersHtml);
        }

        // Add New Search button
        container.append(`
            <div class="text-center mt-4">
                <button class="btn btn-outline-primary" onclick="location.reload()">ðŸ”„ New Search</button>
            </div>
        `);

        },
      error: function(xhr) {
        $("#results").html(`<div class="alert alert-danger">Error: ${xhr.responseText}</div>`);
      }
    });
  });

  $("#causeListForm").submit(function(e) {
    e.preventDefault();
    $("#loadingSpinner").show();
    $("#results").hide().empty();

    const formData = {
      highCourt: $("#causeHighCourt").val(),
      bench: $("#causeBench").val(),
      date: $("#causeDate").val(),
      csrfmiddlewaretoken: $("input[name=csrfmiddlewaretoken]").val()
    };

    $.ajax({
      url: "/api/fetch-causelist/",
      method: "POST",
      data: formData,
      success: function(response) {
        $("#loadingSpinner").hide();
        $("#results").show().html(renderCauseList(response));
      },
      error: function(xhr) {
        $("#loadingSpinner").hide();
        $("#results").show().html(`<div class="alert alert-danger">Error: ${xhr.responseText}</div>`);
      }
    });
  });

  // Helper rendering functions (you can reuse your existing code)
  function renderCaseDetails(response) {
    // build HTML for case details
    return "<pre>" + JSON.stringify(response, null, 2) + "</pre>";
  }

  function renderCauseList(response) {
    if (response.pdf_url) {
      return `<div class="alert alert-success">
                Cause List ready. <a href="${response.pdf_url}" target="_blank" class="btn btn-sm btn-success">Download PDF</a>
              </div>`;
    } else {
      return `<div class="alert alert-warning">No cause list available for selected date.</div>`;
    }
  }

});

</script>

{% endblock %}
